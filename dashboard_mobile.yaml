kiosk_mode:
  entity_settings:
    - entity:
        input_boolean.kiosk_mode: 'on'
      hide_header: true
      hide_menubutton: true
      kiosk: true
    - entity:
        input_boolean.kiosk_mode: 'off'
      hide_header: false
      hide_menubutton: false
      Kiosk: false
button_card_templates:
  entity:
    show_state: true
    tap_action:
      action: more-info
      haptic: medium
    state:
      - value: 'on'
        styles:
          card:
            - background-color: var(--yellow)
            - box-shadow: none
          icon:
            - color: var(--black)
          name:
            - color: var(--black)
          label:
            - color: var(--black)
            - opacity: '0.5'
      - value: 'off'
        styles:
          card:
            - background: var(--contrast2)
            - box-shadow: none
          icon:
            - width: 24px
            - color: var(--contrast20)
          name:
            - color: var(--contrast20)
          label:
            - color: var(--contrast9)
    styles:
      grid:
        - grid-template-columns: 33% auto 33%
        - grid-template-rows: 34% 16% 25% 25%
        - grid-template-areas: |
            "i i i"
            ". . ."
            "s s s"
            "n n n"
      icon:
        - width: 26px
        - margin-left: '-0.5%'
        - margin-top: 1%
      img_cell:
        - justify-content: flex-start
        - margin-top: '-4px'
      state:
        - justify-self: start
        - font-size: 14px
        - font-weight: 700
        - margin-bottom: 0px
      card:
        - height: 100px
        - border-radius: 24px
        - padding: 12px 0 12px 14px
        - box-sizing: border-box
        - '--mdc-ripple-press-opacity': 0
      name:
        - justify-self: start
        - font-size: 12px
views:
  - type: sections
    max_columns: 1
    dense_section_placement: false
    path: Home
    title: Home
    sections:
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:mushroom-template-card
                primary: Lighting
                secondary: >-
                  {% set light1 = states('light.rgb_strip_2') %} {% set light2 =
                  states('light.smart_light_rgbcw_2_2') %} {% set light3 =
                  states('light.smart_light_rgbcw_3') %} {% set count = 0 %} {%
                  if light1 == 'on' %}{% set count = count + 1 %}{% endif %} {%
                  if light2 == 'on' %}{% set count = count + 1 %}{% endif %} {%
                  if light3 == 'on' %}{% set count = count + 1 %}{% endif %} {{
                  count }} lights on
                icon: mdi:lightbulb
                icon_color: |-
                  {% set light1 = states('light.rgb_strip_2') %}
                  {% set light2 = states('light.smart_light_rgbcw_2_2') %}
                  {% set light3 = states('light.smart_light_rgbcw_3') %}
                  {% if light1 == 'on' or light2 == 'on' or light3 == 'on' %}
                    amber
                  {% else %}
                    disabled
                  {% endif %}
                tap_action:
                  action: toggle
                entity: light.bedroom
                fill_container: false
                card_mod:
                  style: |
                    ha-card {
                      border: none;
                      box-shadow: none;
                      background: none;
                    }
              - type: custom:mushroom-template-card
                primary: '{{ states(''sensor.tp_link_router_total_clients'') }} clients'
                secondary: Total Network clients
                icon: mdi:account-multiple
                icon_color: purple
                tap_action:
                  action: more-info
                badge_icon: ''
                badge_color: ''
                entity: sensor.tp_link_router_total_clients
                card_mod:
                  style: |
                    ha-card {
                      border: none;
                      box-shadow: none;
                      background: none;
                    }
              - type: conditional
                conditions:
                  - condition: state
                    entity: binary_sensor.laundry_overdue
                    state: 'on'
                card:
                  type: custom:mushroom-template-card
                  primary: Last Wash Cycle
                  secondary: >-
                    {% set last_date = states('input_datetime.last_wash_cycle')
                    %}

                    {% set days_since_wash = (now().date() -
                    as_datetime(last_date).date()).days %}

                    {% if days_since_wash == 0 %}
                      Today
                    {% elif days_since_wash == 1 %}
                      1 day ago
                    {% else %}
                      {{ days_since_wash }} days ago
                    {% endif %}
                  icon: mdi:washing-machine
                  icon_color: >-
                    {% set last_date = states('input_datetime.last_wash_cycle')
                    %}

                    {% set days_since_wash = (now().date() -
                    as_datetime(last_date).date()).days %}

                    {% if days_since_wash <= 7 %}
                      green
                    {% elif days_since_wash <= 14 %}
                      yellow
                    {% else %}
                      red
                    {% endif %}
                  fill_container: true
                  card_mod:
                    style: |
                      ha-card {
                        border: none;
                        box-shadow: none;
                        background: none;
                      }
                  tap_action:
                    action: navigate
                    navigation_path: '#laundry'
              - type: conditional
                conditions:
                  - entity: sensor.unread_messages
                    state_not: '0'
                card:
                  type: custom:mushroom-template-card
                  primary: Studip Notifications
                  secondary: |-
                    {% set unread = states('sensor.unread_messages')|int %}
                    {% if unread > 0 %}
                      You have {{ unread }} unread message{{ 's' if unread > 1 else '' }}.
                    {% else %}
                      All messages are read.
                    {% endif %}
                  icon: mdi:email
                  badge_icon: |-
                    {% set unread = states('sensor.unread_messages')|int %}
                    {% if unread > 9 %}
                      mdi:numeric-9-plus
                    {% elif unread > 0 and unread < 10 %}
                      mdi:numeric-{{ unread }}
                    {% else %}
                      null
                    {% endif %}
                  badge_color: |-
                    {% set unread = states('sensor.unread_messages')|int %}
                    {{ 'red' if unread > 0 else 'null' }}
                  icon_color: |-
                    {% set unread = states('sensor.unread_messages')|int %}
                    {{ 'red' if unread > 0 else 'grey' }}
                  tap_action:
                    action: url
                    url_path: >-
                      https://e-learning.tuhh.de/studip/dispatch.php/messages/overview
                  entity: sensor.unread_messages
                  card_mod:
                    style: |
                      ha-card {
                        border: none;
                        box-shadow: none;
                        background: none;
                      }
              - type: conditional
                conditions:
                  - condition: state
                    entity: sensor.imap_cga4987_messages
                    state_not: '0'
                card:
                  type: custom:mushroom-template-card
                  primary: Hiwi
                  secondary: >-
                    {% set unread = states('sensor.imap_cga4987_messages')|int
                    %}

                    {% if unread > 0 %}
                      You have {{ unread }} message{{ 's' if unread > 1 else '' }}
                    {% else %}
                      All messages are read.
                    {% endif %}
                  icon: mdi:email
                  badge_icon: >-
                    {% set unread = states('sensor.imap_cga4987_messages')|int
                    %}

                    {% if unread > 9 %}
                      mdi:numeric-9-plus
                    {% elif unread > 0 and unread < 10 %}
                      mdi:numeric-{{ unread }}
                    {% else %}
                      null
                    {% endif %}
                  badge_color: >-
                    {% set unread = states('sensor.imap_cga4987_messages')|int
                    %}

                    {{ 'red' if unread > 0 else 'null' }}
                  icon_color: >-
                    {% set unread = states('sensor.imap_cga4987_messages')|int
                    %}

                    {{ 'red' if unread > 0 else 'grey' }}
                  tap_action:
                    action: url
                    url_path: >-
                      https://sogo.tuhh.de/SOGo/so/cga4987/Mail/view#!/Mail/0/Hiwi
                  entity: sensor.imap_cga4987_messages
                  card_mod:
                    style: |
                      ha-card {
                        border: none;
                        box-shadow: none;
                        background: none;
                      }
              - type: conditional
                conditions:
                  - condition: state
                    entity: binary_sensor.bed_occupancy_sensor_bed_occupancy_sensor
                    state: 'on'
                card:
                  type: custom:mushroom-template-card
                  primary: Bed
                  secondary: >
                    {# Check if the actual state is 'on' #}

                    {% if
                    is_state('binary_sensor.bed_occupancy_sensor_bed_occupancy_sensor',
                    'on') %}
                      Occupied
                    {% else %}
                      Empty
                    {% endif %}
                  icon: >
                    {# Check if the actual state is 'on' #}

                    {% if
                    is_state('binary_sensor.bed_occupancy_sensor_bed_occupancy_sensor',
                    'on') %}
                      mdi:bed
                    {% else %}
                      mdi:bed-empty
                    {% endif %}
                  icon_color: >
                    {# Check if the actual state is 'on' #}

                    {% if
                    is_state('binary_sensor.bed_occupancy_sensor_bed_occupancy_sensor',
                    'on') %}
                      green
                    {% else %}
                      grey
                    {% endif %}
                  entity: binary_sensor.bed_occupancy_sensor_bed_occupancy_sensor
                  fill_container: true
                  tap_action:
                    action: more-info
                  card_mod:
                    style: |
                      ha-card {
                        border: none;
                        box-shadow: none;
                        background: none;
                      }
            columns: 1
            title: Overview
            grid_options:
              columns: 6
              rows: auto
            view_layout:
              grid-area: lights
          - square: false
            type: grid
            cards:
              - type: custom:mushroom-entity-card
                entity: input_boolean.kiosk_mode
                name: Kiosk Mode
                icon: mdi:fullscreen
                fill_container: true
                tap_action:
                  action: toggle
                icon_color: '#FF5449'
                card_mod:
                  style: |
                    ha-card {
                      border: none;
                      box-shadow: none;
                      background: none;
                    }
              - type: custom:mushroom-entity-card
                entity: switch.rt_ax53u_guest_2_4_ghz_1
                name: Guest WiFi
                icon: mdi:wifi
                fill_container: true
                tap_action:
                  action: toggle
                card_mod:
                  style: |
                    ha-card {
                      border: none;
                      box-shadow: none;
                      background: none;
                    }
            columns: 1
            title: Controls
            grid_options:
              columns: 6
              rows: auto
            view_layout:
              grid-area: quick actions
          - square: false
            type: grid
            cards:
              - type: custom:mushroom-template-card
                primary: |-
                  {% if states('input_boolean.bed_automation') == 'on' %}
                    Disable Bed automation
                  {% else %}
                    Enable Bed automation
                  {% endif %}
                secondary: |-
                  {% if states('input_boolean.bed_automation') == 'on' %}
                    Currently enabled
                  {% else %}
                    Currently disabled
                  {% endif %}
                icon: mdi:bed
                badge_icon: |-
                  {% if states('input_boolean.bed_automation') == 'off' %}
                    null
                  {% endif %}
                badge_color: |-
                  {% if states('input_boolean.bed_automation') == 'on' %}
                    null
                  {% else %}
                    red
                  {% endif %}
                icon_color: |-
                  {% if states('input_boolean.bed_automation') == 'on' %}
                    green
                  {% else %}
                    red
                  {% endif %}
                tap_action:
                  action: toggle
                entity: input_boolean.bed_automation
                card_mod:
                  style: |
                    ha-card {
                      border: none;
                      box-shadow: none;
                      background: none;
                    }
              - type: custom:mushroom-template-card
                primary: |-
                  {% if states('input_boolean.presence_automation') == 'on' %}
                    Disable motion sensor
                  {% else %}
                    Enable motion sensor
                  {% endif %}
                secondary: |-
                  {% if states('input_boolean.presence_automation') == 'on' %}
                    Currently enabled
                  {% else %}
                    Currently disabled
                  {% endif %}
                icon: phu:motion-sensor
                badge_icon: |-
                  {% if states('input_boolean.presence_automation') == 'off' %}
                    null
                  {% endif %}
                badge_color: |-
                  {% if states('input_boolean.presence_automation') == 'on' %}
                    null
                  {% else %}
                    red
                  {% endif %}
                icon_color: |-
                  {% if states('input_boolean.presence_automation') == 'on' %}
                    green
                  {% else %}
                    red
                  {% endif %}
                tap_action:
                  action: toggle
                entity: input_boolean.presence_automation
                card_mod:
                  style: |
                    ha-card {
                      border: none;
                      box-shadow: none;
                      background: none;
                    }
            columns: 1
            title: Automations
            grid_options:
              columns: 6
              rows: auto
            view_layout:
              grid-area: lights
          - square: false
            type: grid
            cards:
              - type: custom:mushroom-template-card
                entity: device_tracker.private_ble_device_e35b98
                primary: iPhone
                secondary: >
                  {% set battery = states('sensor.rishis_iphone_battery_level')
                  %}

                  {% set location = 'Home' if is_state(entity, 'home') else
                  'Away' %}

                  {{ location }} • {{ battery }}%
                icon: mdi:cellphone
                icon_color: |
                  {% if is_state(entity, 'home') %}
                    green
                  {% else %}
                    gray
                  {% endif %}
                layout: horizontal
                tap_action:
                  action: more-info
                badge_icon: >
                  {% set battery_level_str =
                  states('sensor.rishis_iphone_battery_level') %} {% set state =
                  states('sensor.rishis_iphone_battery_state') %} {% if state ==
                  'Charging' %}
                    mdi:battery-charging-outline
                  {% elif battery_level_str not in ['unknown', 'unavailable']
                  and battery_level_str | int(0) < 30 %}
                    mdi:battery-alert-variant-outline
                  {% endif %}
                badge_color: >
                  {% set battery_level_str =
                  states('sensor.rishis_iphone_battery_level') %} {% set state =
                  states('sensor.rishis_iphone_battery_state') %} {% if state ==
                  'Charging' %}
                    blue
                  {% elif battery_level_str not in ['unknown', 'unavailable']
                  and battery_level_str | int(0) < 30 %}
                    red
                  {% endif %}
                card_mod:
                  style: |
                    ha-card {
                      border: none;
                      box-shadow: none;
                      background: none;
                    }
              - type: custom:mushroom-template-card
                entity: device_tracker.private_ble_device_3b7ecc
                primary: iPad
                secondary: >
                  {% set battery = states('sensor.ipad_battery_level') %}

                  {% set location = 'Home' if is_state(entity, 'home') else
                  'Away' %}

                  {{ location }} • {{ battery }}%
                icon: mdi:tablet
                icon_color: |
                  {% if is_state(entity, 'home') %}
                    green
                  {% else %}
                    gray
                  {% endif %}
                layout: horizontal
                tap_action:
                  action: more-info
                badge_icon: >
                  {% set battery_level_str = states('sensor.ipad_battery_level')
                  %} {% set state = states('sensor.ipad_battery_state') %} {% if
                  state == 'Charging' %}
                    mdi:battery-charging-outline
                  {% elif battery_level_str not in ['unknown', 'unavailable']
                  and battery_level_str | int(0) < 30 %}
                    mdi:battery-alert-variant-outline
                  {% endif %}
                badge_color: >
                  {% set battery_level_str = states('sensor.ipad_battery_level')
                  %} {% set state = states('sensor.ipad_battery_state') %} {% if
                  state == 'Charging' %}
                    blue
                  {% elif battery_level_str not in ['unknown', 'unavailable']
                  and battery_level_str | int(0) < 30 %}
                    red
                  {% endif %}
                card_mod:
                  style: |
                    ha-card {
                      border: none;
                      box-shadow: none;
                      background: none;
                    }
            columns: 1
            title: Devices
            grid_options:
              columns: 6
              rows: auto
            view_layout:
              grid-area: lights
          - type: vertical-stack
            cards:
              - type: custom:swipe-card
                parameters:
                  centeredSlides: true
                  slidesPerView: auto
                  spaceBetween: 10
                  initialSlide: 0
                cards:
                  - columns: 5
                    type: grid
                    cards:
                      - type: custom:button-card
                        icon: mdi:power
                        aspect_ratio: 1/1
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          haptic: medium
                          target:
                            entity_id: scene.turn_off
                        styles:
                          card:
                            - border-radius: 24px
                          icon:
                            - color: var(--white)
                      - type: custom:button-card
                        icon: mdi:weather-cloudy
                        aspect_ratio: 1/1
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          haptic: medium
                          target:
                            entity_id: scene.daylight
                        styles:
                          card:
                            - border-radius: 24px
                          icon:
                            - color: var(--black)
                      - type: custom:button-card
                        icon: mdi:weather-sunset-down
                        aspect_ratio: 1/1
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          haptic: medium
                          target:
                            entity_id: scene.warm_evening
                        styles:
                          card:
                            - border-radius: 24px
                          icon:
                            - color: var(--black)
                      - type: custom:button-card
                        icon: phu:scene-relax
                        aspect_ratio: 1/1
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          haptic: medium
                          target:
                            entity_id: scene.relaxation
                        styles:
                          card:
                            - border-radius: 24px
                          icon:
                            - color: var(--black)
                      - type: custom:button-card
                        icon: mdi:city
                        aspect_ratio: 1/1
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          haptic: medium
                          target:
                            entity_id: scene.night_city
                        styles:
                          card:
                            - border-radius: 24px
                          icon:
                            - color: var(--black)
                  - columns: 5
                    type: grid
                    cards:
                      - type: custom:button-card
                        icon: mdi:weather-night
                        aspect_ratio: 1/1
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          haptic: medium
                          target:
                            entity_id: scene.night_light
                        styles:
                          card:
                            - border-radius: 24px
                          icon:
                            - color: var(--white)
                      - type: custom:button-card
                        icon: mdi:palette
                        aspect_ratio: 1/1
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          haptic: medium
                          target:
                            entity_id: scene.color_flow
                        styles:
                          card:
                            - border-radius: 24px
                          icon:
                            - color: var(--black)
                      - type: custom:button-card
                        icon: mdi:lightbulb
                        aspect_ratio: 1/1
                        tap_action:
                          action: call-service
                          service: scene.turn_on
                          haptic: medium
                          target:
                            entity_id: scene.energize
                        styles:
                          card:
                            - border-radius: 24px
                          icon:
                            - color: var(--black)
            title: Scenes
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:button-card
                name: String Lights
                entity: light.smart_light_rgbcw_3
                icon: phu:floor-lamp
                size: 40%
                show_state: true
                aspect_ratio: 1/1
                double_tap_action:
                  action: more-info
                styles:
                  name:
                    - font-size: 12px
                    - padding-bottom: 3px !important
                  state:
                    - font-size: 18px
                    - padding-bottom: 8px !important
                state:
                  - value: 'on'
                    styles:
                      card:
                        - background-color: var(--primary-text-color)
                      name:
                        - color: '#263238'
                      state:
                        - color: '#263238'
                      icon:
                        - color: |
                            [[[
                              if (entity.attributes.rgb_color) {
                                return `rgb(${entity.attributes.rgb_color.join(',')})`;
                              }
                              return 'black';
                            ]]]
              - type: custom:button-card
                icon: phu:ikea-paparlamp
                name: Ikea Lamp
                size: 40%
                show_state: true
                aspect_ratio: 1/1
                double_tap_action:
                  action: more-info
                entity: light.smart_light_rgbcw_2_2
                styles:
                  icon:
                    - color: |
                        [[[
                          if (entity.state == 'on' && entity.attributes.rgb_color) {
                            return `rgb(${entity.attributes.rgb_color.join(',')})`;
                          }
                          return 'var(--paper-item-icon-color)';
                        ]]]
                  name:
                    - font-size: 12px
                    - padding-bottom: 3px !important;
                  state:
                    - font-size:18px
                    - padding-bottom: 8px !important;
                state:
                  - value: 'on'
                    styles:
                      card:
                        - background-color: var(--primary-text-color)
                      name:
                        - color: '#263238'
                      state:
                        - color: '#263238'
                      icon:
                        - color: |
                            [[[
                              if (entity.attributes.rgb_color) {
                                return `rgb(${entity.attributes.rgb_color.join(',')})`;
                              }
                              return 'black';
                            ]]]
              - type: custom:button-card
                entity: light.rgb_strip_2
                name: RGB Lights
                icon: mdi:led-strip-variant
                size: 40%
                show_state: true
                aspect_ratio: 1/1
                double_tap_action:
                  action: more-info
                styles:
                  icon:
                    - color: |
                        [[[
                          if (entity.state == 'on' && entity.attributes.rgb_color) {
                            return `rgb(${entity.attributes.rgb_color.join(',')})`;
                          }
                          return 'var(--paper-item-icon-color)';
                        ]]]
                  name:
                    - font-size: 12px
                    - padding-bottom: 3px !important;
                  state:
                    - font-size:18px
                    - padding-bottom: 8px !important;
                state:
                  - value: 'on'
                    styles:
                      card:
                        - background-color: var(--primary-text-color)
                      name:
                        - color: '#263238'
                      state:
                        - color: '#263238'
                      icon:
                        - color: |
                            [[[
                              if (entity.attributes.rgb_color) {
                                return `rgb(${entity.attributes.rgb_color.join(',')})`;
                              }
                              return 'black';
                            ]]]
            columns: 3
            title: Lights
            view_layout:
              grid-area: lights
          - square: false
            type: grid
            cards:
              - type: custom:button-card
                entity: sensor.40_b7_fc_18_ba_42_ba42_temperature
                name: Temperature
                icon: mdi:thermometer
                size: 30%
                show_state: true
                aspect_ratio: 1/1
                double_tap_action:
                  action: more-info
                styles:
                  name:
                    - font-size: 12px
                    - padding-bottom: 3px !important;
                  state:
                    - font-size:18px
                    - padding-bottom: 8px !important;
              - type: custom:button-card
                entity: sensor.40_b7_fc_18_ba_42_ba42_humidity
                name: Humidity
                icon: mdi:water-percent
                size: 30%
                show_state: true
                aspect_ratio: 1/1
                tap_action:
                  action: more-info
                styles:
                  name:
                    - font-size: 12px
                    - padding-bottom: 3px !important;
                  state:
                    - font-size:18px
                    - padding-bottom: 8px !important;
              - type: conditional
                conditions:
                  - condition: numeric_state
                    entity: sensor.40_b7_fc_18_ba_42_ba42_battery
                    below: 10
                card:
                  type: custom:button-card
                  entity: sensor.40_b7_fc_18_ba_42_ba42_battery
                  name: Low Battery
                  icon: mdi:battery-alert-variant-outline
                  size: 30%
                  show_state: true
                  aspect_ratio: 1/1
                  styles:
                    card:
                      - border: 1px solid var(--error-color, red)
                    icon:
                      - color: var(--error-color, red)
                    name:
                      - font-size: 12px
                      - padding-bottom: 3px !important
                    state:
                      - font-size: 18px
                      - padding-bottom: 8px !important
              - type: custom:button-card
                entity: sensor.human_presence_sensor_illuminance
                name: Ambient Light
                icon: mdi:brightness-5
                size: 30%
                show_state: true
                aspect_ratio: 1/1
                styles:
                  name:
                    - font-size: 12px
                    - padding-bottom: 3px !important;
                  state:
                    - font-size:18px
                    - padding-bottom: 8px !important;
            title: Climate
            columns: 3
            view_layout:
              grid-area: climate
          - square: true
            type: grid
            cards:
              - type: custom:button-card
                entity: binary_sensor.human_presence_sensor_motion
                name: Motion Sensor
                icon: phu:wall-spot
                state_display: null
                color_type: icon
                size: 40%
                show_state: true
                aspect_ratio: 1/1
                double_tap_action:
                  action: more-info
                styles:
                  name:
                    - font-size: 12px
                    - padding-bottom: 3px !important;
                  state:
                    - font-size: 18px
                    - padding-bottom: 8px !important;
                  icon:
                    - color: '#8391B2'
              - type: custom:button-card
                entity: binary_sensor.door_sensor_alarm_door
                name: Door
                icon: mdi:door
                state:
                  - value: 'on'
                    icon: mdi:door-open
                    styles:
                      icon:
                        - color: '#FF5449'
                state_display: null
                size: 40%
                show_state: true
                aspect_ratio: 1/1
                double_tap_action:
                  action: more-info
                styles:
                  name:
                    - font-size: 12px
                    - padding-bottom: 3px !important;
                  state:
                    - font-size: 18px
                    - padding-bottom: 8px !important;
              - type: conditional
                conditions:
                  - condition: numeric_state
                    entity: sensor.door_sensor_alarm_battery
                    below: 10
                card:
                  type: custom:button-card
                  entity: sensor.door_sensor_alarm_battery
                  name: Low Battery
                  icon: mdi:battery-alert-variant-outline
                  size: 30%
                  show_state: true
                  aspect_ratio: 1/1
                  styles:
                    card:
                      - border: 1px solid var(--error-color, red)
                    icon:
                      - color: var(--error-color, red)
                    name:
                      - font-size: 12px
                      - padding-bottom: 3px !important
                    state:
                      - font-size: 18px
                      - padding-bottom: 8px !important
            columns: 3
            title: Security
            view_layout:
              grid-area: security
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:swipe-card
                card_width: calc(100% - 48px)
                parameters:
                  spaceBetween: 16
                  initialSlide: 0
                cards:
                  - type: custom:button-card
                    entity: weather.pirateweather
                    show_name: false
                    show_icon: false
                    custom_fields:
                      icon: |
                        [[[
                          var weather = states["weather.pirateweather"].state;
                          if (states['weather.pirateweather'].state == 'partlycloudy' && states['sun.sun'].state == 'below_horizon') {
                            return `<img src="/local/weather_icons/partly-cloudy-night.svg" width="90" height="90" />`
                          } else {
                            return `<img src="/local/weather_icons/${weather}.svg" width="90" height="90" />`
                          }
                        ]]]
                      temp: |
                        [[[
                          return states['weather.pirateweather'].attributes.temperature + '°c'
                        ]]]
                      cond: |
                        [[[
                          var time = states["weather.pirateweather"].state;
                          if (time == 'clear-night'){
                            return 'Clear';
                          } else if (time == 'clear'){
                            return 'Sunny';
                          } else if (time == 'partlycloudy'){
                            return 'Partly Cloudy';
                          } else {
                            return states["weather.pirateweather"].state;
                          }
                        ]]]
                    styles:
                      card:
                        - position: relative
                        - height: 120pt
                      custom_fields:
                        icon:
                          - position: absolute
                          - top: 30%
                          - left: 50%
                          - right: 50%
                          - transform: translate(-50%, -50%)
                          - width: 90px
                          - height: 90px
                        temp:
                          - position: absolute
                          - top: 64%
                          - left: 50%
                          - transform: translate(-50%, -50%)
                          - width: 100%
                          - text-align: center
                          - font-size: 23pt
                          - font-weight: 700
                        cond:
                          - position: absolute
                          - top: 80%
                          - left: 50%
                          - transform: translate(-50%, -50%)
                          - width: 100%
                          - text-align: center
                          - font-size: 10pt
                          - text-transform: capitalize
                  - type: custom:button-card
                    entity: weather.pirateweather
                    show_name: false
                    show_icon: false
                    custom_fields:
                      icon_humidity: >
                        <ha-icon icon="mdi:water-outline" style="width:60px;
                        height: 60px;"></ha-icon>
                      humidity: |
                        [[[
                          return states["weather.pirateweather"].attributes.humidity + '%'
                        ]]]
                    styles:
                      card:
                        - position: relative
                        - height: 120pt
                      custom_fields:
                        icon_humidity:
                          - position: absolute
                          - top: 35%
                          - left: 50%
                          - transform: translate(-50%, -50%)
                        humidity:
                          - position: absolute
                          - top: 70%
                          - left: 50%
                          - transform: translate(-50%, -50%)
                          - font-size: 18pt
                          - font-weight: 600
                  - type: custom:button-card
                    entity: weather.pirateweather
                    show_name: false
                    show_icon: false
                    custom_fields:
                      icon_wind: >
                        <ha-icon icon="mdi:weather-windy" style="width:40px;
                        height: 40px;"></ha-icon>
                      wind: |
                        [[[
                          let myNumber = states["weather.pirateweather"].attributes.wind_speed;
                          return `${Math.round(myNumber)} km/h`;
                        ]]]
                    styles:
                      card:
                        - position: relative
                        - height: 120pt
                      custom_fields:
                        icon_wind:
                          - position: absolute
                          - top: 35%
                          - left: 50%
                          - transform: translate(-50%, -50%)
                        wind:
                          - position: absolute
                          - top: 70%
                          - left: 50%
                          - transform: translate(-50%, -50%)
                          - font-size: 18pt
                          - font-weight: 600
              - type: custom:swipe-card
                card_width: calc(100% - 48px)
                parameters:
                  spaceBetween: 16
                  initialSlide: 0
                cards:
                  - type: sensor
                    entity: sensor.pirateweather_apparent_temperature
                    hours_to_show: 24
                    detail: 1
                    graph: line
                    name: Feels Like
                    icon: none
                    card_mod:
                      style: |
                        ha-card {
                          height: 120pt !important;    # Force height with card-mod
                        }
                  - type: sensor
                    entity: sensor.pirateweather_wind_gust
                    hours_to_show: 24
                    detail: 1
                    graph: line
                    name: Wind Gust
                    icon: none
                    card_mod:
                      style: |
                        ha-card {
                          height: 120pt !important;    # Force height with card-mod
                        }
            columns: 2
            title: Weather
            view_layout:
              grid-area: lights
          - square: false
            type: grid
            cards:
              - type: custom:timeflow-card
                auto_discover_alexa: true
                show_timer_info: false
                title: Alexa
                show_alexa_device: false
                background_color: rgba(69, 70, 68, 0.4)
                expired_animation: false
                progress_color: rgba(119, 20, 318, 0.4)
                card_mod:
                  style: |
                    .card-content {
                      flex-direction: row !important;
                      align-items: center !important;
                      justify-content: space-between !important;
                    }
                    .header {
                      margin-bottom: 0 !important;
                    }
                    .content {
                      margin-top: 0 !important;
                    }
                    ha-card {
                      border-radius: 28px !important;
                      box-shadow: none !important;
                      border: none !important;
                     }
              - type: custom:timeflow-card
                timer_entity: timer.tea
                show_seconds: true
                show_minutes: true
                background_color: rgba(69, 70, 68, 0.4)
                progress_color: '#88B596'
                tap_action:
                  action: call-service
                  service: script.toggle_tea_timer
                double_tap_action:
                  action: call-service
                  service: timer.cancel
                  target:
                    entity_id: timer.tea
                hold_action:
                  action: more-info
                card_mod:
                  style: |
                    .card-content {
                      flex-direction: row !important;
                      align-items: center !important;
                      justify-content: space-between !important;
                    }
                    .header {
                      margin-bottom: 0 !important;
                    }
                    .content {
                      margin-top: 0 !important;
                    }
                    ha-card {
                      border-radius: 28px !important;
                      box-shadow: none !important;
                      border: none !important;
                      }
                grid_options:
                  columns: 8
            columns: 2
            title: Timers
            view_layout:
              grid-area: lights
          - square: false
            type: grid
            cards:
              - type: custom:timeflow-card
                title: >-
                  {{ ' Sunrise' if states('sun.sun') == 'below_horizon' else '
                  Sunset' }}
                target_date: >-
                  {{ states('sensor.sun_next_rising') if states('sun.sun') ==
                  'below_horizon' else states('sensor.sun_next_setting') }}
                creation_date: |-
                  {% if states('sun.sun') == 'below_horizon' %}
                    {{ (states('sensor.sun_next_setting') | as_datetime).replace(day=(states('sensor.sun_next_setting') | as_datetime).day - 1).isoformat() }}
                  {% else %}
                    {{ (states('sensor.sun_next_rising') | as_datetime).replace(day=(states('sensor.sun_next_rising') | as_datetime).day - 1).isoformat() }}
                  {% endif %}
                show_days: false
                show_hours: true
                show_minutes: false
                show_seconds: false
                color: '#ffffff'
                background_color: rgba(69, 70, 68, 0.4)
                progress_color: '#d2e8d5'
                card_mod:
                  style:
                    .: |
                      ha-card {
                        border-radius: 28px !important;
                        box-shadow: none !important;
                        border: none !important;
                       }
                      ha-card .title {
                        font-size: 1.4rem !important;
                      }
                      ha-card .subtitle {
                        font-size: 1.3rem !important;
                      }
                      ha-card .subtitle {
                        color: #888888; /* A light gray */
                      }
                      .card-content {
                        flex-direction: row !important;
                        align-items: center !important;
                        justify-content: space-between !important;
                      }
                tap_action:
                  action: more-info
                  entity: sun.sun
              - type: custom:timeflow-card
                title: Backup
                target_date: sensor.backup_next_scheduled_automatic_backup
                color: '#ffffff'
                progress_color: '#8391B2'
                show_seconds: false
                show_minutes: false
                show_hours: true
                show_days: false
                show_months: false
                background_color: rgba(69, 70, 68, 0.4)
                creation_date: sensor.backup_last_successful_automatic_backup
                card_mod:
                  style:
                    .: |
                      ha-card {
                        border-radius: 28px !important;
                        box-shadow: none !important;
                        border: none !important;
                       }
                      ha-card .title {
                        font-size: 1.4rem !important;
                      }
                      ha-card .subtitle {
                        font-size: 1.3rem !important;
                      }
                      ha-card .subtitle {
                        color: #888888; /* A light gray */
                      }
                      .card-content {
                        flex-direction: row !important;
                        align-items: center !important;
                        
                tap_action:
                  action: more-info
                  entity: sensor.backup_last_successful_automatic_backup
            columns: 2
            title: Timeflows
            view_layout:
              grid-area: lights
          - type: custom:navbar-card
            iphone: null
            show_labels: true
            desktop: null
            position: left
            min_width: 768
            layout: null
            auto_padding: true
            routes:
              - url: /dashboard-iphone/Home
                icon: mdi:home
                icon_selected: mdi:home-variant
                label: Home
              - url: /dashboard-iphone/System
                icon: mdi:powershell
                label: System
              - url: /dashboard-iphone/Proxmox
                icon: phu:proxmox
                label: Proxmox
              - url: /dashboard-iphone/timeflows
                icon: mdi:timer
                label: Timeflows
            mobile:
              mode: floating
            styles: |
              .navbar.mobile .icon { --mdc-icon-size: 28px; !}
              .navbar.desktop .icon { --mdc-icon-size: 30px; }
              .navbar {
                background: #212824;
              }
          - type: custom:button-card
            name: Looks like you've reached the end 👀
            styles:
              card:
                - background: none
                - box-shadow: none
                - border: none
              name:
                - opacity: 60%
                - font-size: 16px
    theme: Material You
    badges: []
    background:
      opacity: 100
      alignment: center
      size: cover
      repeat: no-repeat
      attachment: scroll
    header:
      layout: responsive
      badges_position: top
      badges_wrap: wrap
      card:
        type: custom:button-card
        entity: person.rishi
        show_name: false
        show_state: false
        show_entity_picture: false
        show_icon: false
        triggers_update: sensor.time
        custom_fields:
          left: |
            [[[
              const time = new Date().toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit' });
              const date = new Date().toLocaleDateString('en-US', { weekday: 'long', month: 'long', day: 'numeric' });
              
              return `
                <div style="text-align: left; max-width: 200px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                  <span style="font-size: 46px; font-weight: 680; line-height: 1;">
                    ${time}
                  </span>
                  <br>
                  <span style="font-size: 15px; font-weight: 400;">
                    ${date}
                  </span>
                </div>
              `;
            ]]]
          avatar: |
            [[[
              const pic = (entity && entity.attributes && entity.attributes.entity_picture) ? entity.attributes.entity_picture : '';
              return `<img src="${pic}" alt="" style="width:55px; height:55px; border-radius:50%; background:#444; display:block;" />`;
            ]]]
        styles:
          card:
            - background: transparent
            - border: none
            - box-shadow: none
            - padding: 12px
          grid:
            - display: flex
            - flex-direction: row
            - align-items: flex-start
            - justify-content: space-between
            - gap: 12px
          custom_fields:
            left:
              - order: 1
              - min-width: 0
            avatar:
              - order: 2
              - flex: 0 0 auto
    cards: []
    subview: false
    icon: mdi:home
    top_margin: false
  - type: sections
    max_columns: 1
    dense_section_placement: false
    path: System
    title: System
    sections:
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:button-card
                    template: entity
                    entity: sensor.system_monitor_processor_use
                    name: CPU Usage
                    styles:
                      card:
                        - height: 100px
                        - padding: 12px 16px
                        - background: var(--ha-card-background)
                        - border-radius: 12px 12px 0 0
                        - box-shadow: none
                        - border: none
                      name:
                        - font-size: 16px
                        - color: var(--primary-text-color)
                      state:
                        - font-size: 15px
                        - padding-top: 19px
                        - padding-bottom: 19px
                  - type: custom:mini-graph-card
                    entities:
                      - entity: sensor.system_monitor_processor_use
                    show:
                      name: false
                      icon: false
                      state: false
                    line_width: 3
                    hours_to_show: 2
                    points_per_hour: 5
                    line_color: '#F9EA9A'
                    animate: true
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:button-card
                    template: entity
                    entity: sensor.system_monitor_processor_temperature
                    name: Temperature
                    styles:
                      card:
                        - height: 100px
                        - padding: 12px 16px
                        - background: var(--card-background-color)
                        - border-radius: 12px 12px 0 0
                        - box-shadow: none
                        - border: none
                      name:
                        - font-size: 16px
                        - color: var(--primary-text-color)
                      state:
                        - font-size: 15px
                        - padding-top: 19px
                        - padding-bottom: 19px
                  - type: custom:mini-graph-card
                    entities:
                      - entity: sensor.system_monitor_processor_temperature
                    show:
                      name: false
                      icon: false
                      state: false
                    line_width: 3
                    hours_to_show: 2
                    points_per_hour: 5
                    line_color: '#C3DBC5'
                    animate: true
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:button-card
                    template: entity
                    entity: sensor.system_monitor_memory_usage
                    state_display: |
                      [[[
                        return states['sensor.system_monitor_memory_usage'].state + '%'
                      ]]]
                    name: Memory Usage
                    styles:
                      card:
                        - height: 100px
                        - padding: 12px 16px
                        - background: var(--card-background-color)
                        - border-radius: 12px 12px 0 0
                        - box-shadow: none
                        - border: none
                      name:
                        - font-size: 16px
                        - color: var(--primary-text-color)
                      state:
                        - font-size: 15px
                        - padding-top: 19px
                        - padding-bottom: 19px
                  - type: custom:mini-graph-card
                    entities:
                      - entity: sensor.system_monitor_memory_usage
                    show:
                      name: false
                      icon: false
                      state: false
                    line_width: 3
                    hours_to_show: 2
                    points_per_hour: 5
                    line_color: '#F2CEE6'
                    animate: true
                    style: ''
              - type: custom:vertical-stack-in-card
                cards:
                  - type: custom:button-card
                    template: entity
                    entity: sensor.system_monitor_disk_usage
                    state_display: |
                      [[[
                        return states['sensor.home_assistant_host_disk_used'].state + ' GB'
                      ]]]
                    name: Storage Used
                    icon: mdi:harddisk
                    styles:
                      card:
                        - height: 100px
                        - padding: 12px 16px
                        - background: var(--card-background-color)
                        - border-radius: 12px 12px 0 0
                        - box-shadow: none
                        - border: none
                      name:
                        - font-size: 16px
                        - color: var(--primary-text-color)
                      state:
                        - font-size: 15px
                        - padding-top: 19px
                        - padding-bottom: 19px
                  - type: custom:mini-graph-card
                    entities:
                      - entity: sensor.system_monitor_disk_usage
                        color: '#7798AB'
                    show:
                      name: false
                      icon: false
                      state: false
                      graph: bar
                    hours_to_show: 2
                    points_per_hour: 5
                    lower_bound: 1
                    upper_bound: 32
                    animate: true
            title: Stats
            columns: 2
          - square: false
            type: grid
            cards:
              - type: custom:button-card
                entity: switch.linux_pc
                icon: mdi:desktop-tower
                name: Proxmox
                aspect_ratio: 1/1
                label: >
                  [[[ return states['switch.linux_pc'].state === 'on' ? 'On' :
                  'Off'; ]]]
                show_name: true
                show_label: true
                show_icon: true
                tap_action:
                  action: call-service
                  service: switch.toggle
                  target:
                    entity_id: switch.linux_pc
                  confirmation:
                    text: |
                      [[[
                        return entity.state === 'off'
                          ? 'Do you want to start Proxmox?'
                          : 'Do you want to stop Proxmox?';
                      ]]]
                styles:
                  name:
                    - font-size: 12px
                    - padding-bottom: 3px !important;
                  state:
                    - font-size: 18px
                    - padding-bottom: 8px !important;
                state:
                  - value: 'on'
                    styles:
                      card:
                        - background-color: var(--primary-text-color)
                      name:
                        - color: '#263238'
                      label:
                        - color: '#263238'
                      icon:
                        - color: |
                            [[[
                              if (entity.attributes.rgb_color) {
                                return `rgb(${entity.attributes.rgb_color.join(',')})`;
                              }
                              return 'black';
                            ]]]
              - type: custom:button-card
                entity: switch.10amp_smart_plug_socket_1
                icon: mdi:desktop-tower
                name: Remote Server
                aspect_ratio: 1/1
                label: >
                  [[[ return states['switch.10amp_smart_plug_socket_1'].state
                  === 'on' ? 'On' : 'Off'; ]]]
                show_name: true
                show_label: true
                show_icon: true
                tap_action:
                  action: call-service
                  service: switch.toggle
                  target:
                    entity_id: switch.10amp_smart_plug_socket_1
                  confirmation:
                    text: |
                      [[[
                        return entity.state === 'off'
                          ? 'Do you want to start Remote Server?'
                          : 'Do you want to stop Remote Server?';
                      ]]]
                styles:
                  name:
                    - font-size: 12px
                    - padding-bottom: 3px !important;
                  state:
                    - font-size: 18px
                    - padding-bottom: 8px !important;
                state:
                  - value: 'on'
                    styles:
                      card:
                        - background-color: var(--primary-text-color)
                      name:
                        - color: '#263238'
                      label:
                        - color: '#263238'
                      icon:
                        - color: |
                            [[[
                              if (entity.attributes.rgb_color) {
                                return `rgb(${entity.attributes.rgb_color.join(',')})`;
                              }
                              return 'black';
                            ]]]
              - type: custom:button-card
                entity: switch.ubuntu_pc
                icon: mdi:desktop-tower
                name: Ubuntu PC
                aspect_ratio: 1/1
                label: >
                  [[[ return states['switch.ubuntu_pc'].state === 'on' ? 'On' :
                  'Off'; ]]]
                show_name: true
                show_label: true
                show_icon: true
                tap_action:
                  action: call-service
                  service: switch.toggle
                  target:
                    entity_id: switch.ubuntu_pc
                  confirmation:
                    text: |
                      [[[
                        return entity.state === 'off'
                          ? 'Do you want to start Ubuntu PC?'
                          : 'Do you want to stop Ubuntu PC?';
                      ]]]
                styles:
                  name:
                    - font-size: 12px
                    - padding-bottom: 3px !important;
                  state:
                    - font-size: 18px
                    - padding-bottom: 8px !important;
                state:
                  - value: 'on'
                    styles:
                      card:
                        - background-color: var(--primary-text-color)
                      name:
                        - color: '#263238'
                      label:
                        - color: '#263238'
                      icon:
                        - color: |
                            [[[
                              if (entity.attributes.rgb_color) {
                                return `rgb(${entity.attributes.rgb_color.join(',')})`;
                              }
                              return 'black';
                            ]]]
            title: Servers
            columns: 3
          - square: false
            type: grid
            cards:
              - type: entities
                entities:
                  - entity: sensor.system_monitor_ipv4_address_enp1s0
                    name: Current IP Address
                    secondary_info: none
                  - entity: sensor.system_monitor_ipv4_address_tailscale0
                    name: Tailscale IP Address
                  - entity: binary_sensor.tailscale_running
                    name: Tailscale
                    icon: phu:tailscale
                    secondary_info: none
                  - entity: binary_sensor.adguard_home_running
                    icon: phu:adguard
                    name: Dns
            title: Network
            columns: 1
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:auto-entities
                card:
                  type: entities
                  show_header_toggle: false
                  card_mod:
                    style: |
                      ha-card {
                        font-size: 13px;
                      }
                filter:
                  include:
                    - options:
                        secondary_info: last-updated
                      domain: update
                      state: 'on'
                  exclude:
                    - options: {}
                      entity_id: update.*_backup*
                sort:
                  method: state
                  reverse: true
            title: Updates
            columns: 1
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:auto-entities
                card:
                  type: entities
                  show_header_toggle: false
                filter:
                  include:
                    - entity_id: sensor.tailscale_*_status
                      state: /^(?!offline).*$/
                  exclude: []
                sort:
                  method: friendly_name
                show_empty: false
                card_param: entities
                card_mod:
                  style: |
                    ha-card {
                      font-size: 13px;
                    }
                    /* This still works to make the icon a green badge */
                    hui-generic-entity-row {
                      --card-mod-icon-color: #4CAF50;
                    }
            title: Tailscale – Connected Clients
            columns: 1
          - square: false
            type: grid
            cards:
              - type: entities
                entities:
                  - sensor.active_issues
                  - button.ignore_all_issues
            title: Spooky Issues
            columns: 1
          - type: vertical-stack
            title: System Options
            cards:
              - type: custom:button-card
                tap_action:
                  action: none
                show_name: false
                show_icon: false
                styles:
                  card:
                    - border-radius: 18px
                    - padding: 5px
                    - background-color: transparent
                  grid:
                    - grid-template-areas: '"button1 button2"'
                    - grid-template-columns: 1fr 1fr
                    - column-gap: 5px
                custom_fields:
                  button1:
                    card:
                      type: custom:button-card
                      name: Restart HA
                      icon: mdi:restart
                      tap_action:
                        action: call-service
                        service: homeassistant.restart
                      confirmation:
                        text: Are you sure you want to restart Home Assistant?
                      styles:
                        card:
                          - background-color: rgba(100, 116, 139, 0.3)
                          - border-radius: 18px
                          - height: 62px
                          - box-shadow: none
                        grid:
                          - grid-template-areas: '"i n"'
                          - grid-template-columns: min-content 1fr
                          - column-gap: 0px
                        icon:
                          - justify-self: center
                          - align-self: center
                          - padding-left: 8px
                        name:
                          - align-self: center
                          - font-size: 15px
                      extra_styles: |
                        ha-card:active {
                          background-color: #3da853;
                        }
                  button2:
                    card:
                      type: custom:button-card
                      name: Restart System
                      icon: mdi:server
                      tap_action:
                        action: call-service
                        service: hassio.host_reboot
                      confirmation:
                        text: Are you sure you want to restart the entire system?
                      styles:
                        card:
                          - background-color: rgba(100, 116, 139, 0.3)
                          - border-radius: 18px
                          - height: 62px
                          - box-shadow: none
                        grid:
                          - grid-template-areas: '"i n"'
                          - grid-template-columns: min-content 1fr
                          - column-gap: 8px
                        icon:
                          - justify-self: center
                          - align-self: center
                          - padding-left: 0px
                        name:
                          - align-self: center
                          - font-size: 15px
                      extra_styles: |
                        ha-card:active {
                          background-color: #3da853;
                        }
                card_mod:
                  style: |
                    ha-card {
                      border: none;
                      box-shadow: none;
                      background: none;
                    }
              - type: custom:button-card
                tap_action:
                  action: none
                show_name: false
                show_icon: false
                styles:
                  card:
                    - border-radius: 18px
                    - padding-top: 1px
                    - background-color: transparent
                  grid:
                    - grid-template-areas: '"button1"'
                    - grid-template-columns: 1fr
                custom_fields:
                  button1:
                    card:
                      type: custom:button-card
                      name: Power Off System
                      icon: mdi:power
                      tap_action:
                        action: call-service
                        service: hassio.host_shutdown
                      confirmation:
                        text: >
                          Are you sure you want to shut down the system? This
                          action is not easily reversible.
                      styles:
                        card:
                          - background-color: rgba(215, 50, 50, 0.25)
                          - border-radius: 20px
                          - box-shadow: none
                          - height: 62px
                        grid:
                          - grid-template-areas: '"i n"'
                          - grid-template-columns: min-content 1fr
                          - column-gap: 8px
                        icon:
                          - justify-self: center
                          - align-self: center
                          - padding-left: 8px
                        name:
                          - align-self: center
                          - font-size: 15px
                      extra_styles: |
                        ha-card:active {
                          background-color: #d73232; /* Bright red on tap */
                        }
                card_mod:
                  style: |
                    ha-card {
                      border: none;
                      box-shadow: none;
                      background: none;
                    }
          - type: custom:navbar-card
            iphone: null
            show_labels: true
            desktop: null
            position: left
            min_width: 768
            layout: null
            auto_padding: true
            routes:
              - url: /dashboard-iphone/Home
                icon: mdi:home
                icon_selected: mdi:home-variant
                label: Home
              - url: /dashboard-iphone/System
                icon: mdi:powershell
                label: System
              - url: /dashboard-iphone/Proxmox
                icon: phu:proxmox
                label: Proxmox
              - url: /dashboard-iphone/timeflows
                icon: mdi:timer
                label: Timeflows
            mobile:
              mode: floating
            styles: |
              .navbar.mobile .icon { --mdc-icon-size: 28px; !}
              .navbar.desktop .icon { --mdc-icon-size: 30px; }
              .navbar {
                background: #212824;
              }
          - type: custom:button-card
            name: |
              [[[
                return "HA Core v" + states['update.home_assistant_core_update'].attributes.installed_version + ", Supervisor v" + states['update.home_assistant_supervisor_update'].attributes.installed_version;
              ]]]
            styles:
              card:
                - background: none
                - box-shadow: none
                - border: none
              name:
                - opacity: 60%
                - font-size: 16px
    theme: Material You
    badges: []
    background:
      opacity: 100
      alignment: center
      size: cover
      repeat: no-repeat
      attachment: scroll
    header:
      layout: responsive
      badges_position: top
      badges_wrap: scroll
      card:
        type: custom:button-card
        entity: person.rishi
        show_name: false
        show_state: false
        show_entity_picture: false
        show_icon: false
        triggers_update: sensor.time
        custom_fields:
          left: |
            [[[
              const time = new Date().toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit' });
              const date = new Date().toLocaleDateString('en-US', { weekday: 'long', month: 'long', day: 'numeric' });
              
              return `
                <div style="text-align: left; max-width: 200px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                  <span style="font-size: 46px; font-weight: 680; line-height: 1;">
                    ${time}
                  </span>
                  <br>
                  <span style="font-size: 15px; font-weight: 400;">
                    ${date}
                  </span>
                </div>
              `;
            ]]]
          avatar: |
            [[[
              const pic = (entity && entity.attributes && entity.attributes.entity_picture) ? entity.attributes.entity_picture : '';
              return `<img src="${pic}" alt="" style="width:55px; height:55px; border-radius:50%; background:#444; display:block;" />`;
            ]]]
        styles:
          card:
            - background: transparent
            - border: none
            - box-shadow: none
            - padding: 12px
          grid:
            - display: flex
            - flex-direction: row
            - align-items: flex-start
            - justify-content: space-between
            - gap: 12px
          custom_fields:
            left:
              - order: 1
              - min-width: 0
            avatar:
              - order: 2
              - flex: 0 0 auto
    cards: []
    subview: false
    icon: mdi:account-group
  - type: sections
    max_columns: 1
    title: Proxmox
    path: Proxmox
    icon: phu:proxmox
    sections:
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:button-card
                entity: sensor.washing_machine_41297
                name: '41297'
                icon: mdi:washing-machine
                show_state: true
                aspect_ratio: 1/1
                size: 30%
                tap_action:
                  action: more-info
                state_display: |
                  [[[
                    if (entity.state == 'AVAILABLE') return 'Available';
                    if (entity.state == 'OCCUPIED') return 'Occupied';
                    if (entity.state == 'STOPPABLE') return 'Your Wash';
                    return 'Unknown';
                  ]]]
                state:
                  - value: AVAILABLE
                    color: '#e4dff9'
                  - value: OCCUPIED
                    color: '#FF5449'
                  - value: STOPPABLE
                    color: '#ffb41b'
                  - operator: default
                    color: '#75796c'
                styles:
                  card:
                    - border: none
                    - box-shadow: none
                  name:
                    - font-size: 12px
                    - padding-bottom: 3px !important
                  state:
                    - font-size: 18px
                    - padding-bottom: 8px !important
              - type: custom:button-card
                entity: sensor.washing_machine_41298
                name: '41298'
                icon: mdi:washing-machine
                show_state: true
                aspect_ratio: 1/1
                size: 30%
                tap_action:
                  action: more-info
                state_display: |
                  [[[
                    if (entity.state == 'AVAILABLE') return 'Available';
                    if (entity.state == 'OCCUPIED') return 'Occupied';
                    if (entity.state == 'STOPPABLE') return 'Your Wash';
                    return 'Unknown';
                  ]]]
                state:
                  - value: AVAILABLE
                    color: '#e4dff9'
                  - value: OCCUPIED
                    color: '#FF5449'
                  - value: STOPPABLE
                    color: '#ffb41b'
                  - operator: default
                    color: '#75796c'
                styles:
                  card:
                    - border: none
                    - box-shadow: none
                  name:
                    - font-size: 12px
                    - padding-bottom: 3px !important
                  state:
                    - font-size: 18px
                    - padding-bottom: 8px !important
              - type: custom:button-card
                entity: sensor.washing_machine_41299
                name: '41299'
                icon: mdi:washing-machine
                show_state: true
                aspect_ratio: 1/1
                size: 30%
                tap_action:
                  action: more-info
                state_display: |
                  [[[
                    if (entity.state == 'AVAILABLE') return 'Available';
                    if (entity.state == 'OCCUPIED') return 'Occupied';
                    if (entity.state == 'STOPPABLE') return 'Your Wash';
                    return 'Unknown';
                  ]]]
                state:
                  - value: AVAILABLE
                    color: '#e4dff9'
                  - value: OCCUPIED
                    color: '#FF5449'
                  - value: STOPPABLE
                    color: '#ffb41b'
                  - operator: default
                    color: '#75796c'
                styles:
                  card:
                    - border: none
                    - box-shadow: none
                  name:
                    - font-size: 12px
                    - padding-bottom: 3px !important
                  state:
                    - font-size: 18px
                    - padding-bottom: 8px !important
              - type: custom:button-card
                entity: sensor.washing_machine_41300
                name: '41300'
                icon: mdi:washing-machine
                show_state: true
                aspect_ratio: 1/1
                size: 30%
                tap_action:
                  action: more-info
                state_display: |
                  [[[
                    if (entity.state == 'AVAILABLE') return 'Available';
                    if (entity.state == 'OCCUPIED') return 'Occupied';
                    if (entity.state == 'STOPPABLE') return 'Your Wash';
                    return 'Unknown';
                  ]]]
                state:
                  - value: AVAILABLE
                    color: '#e4dff9'
                  - value: OCCUPIED
                    color: '#FF5449'
                  - value: STOPPABLE
                    color: '#ffb41b'
                  - operator: default
                    color: '#75796c'
                styles:
                  card:
                    - border: none
                    - box-shadow: none
                  name:
                    - font-size: 12px
                    - padding-bottom: 3px !important
                  state:
                    - font-size: 18px
                    - padding-bottom: 8px !important
              - type: custom:button-card
                entity: sensor.dryer_41295
                name: '41295'
                icon: mdi:tumble-dryer
                show_state: true
                aspect_ratio: 1/1
                size: 30%
                tap_action:
                  action: more-info
                state_display: |
                  [[[
                    if (entity.state == 'AVAILABLE') return 'Available';
                    if (entity.state == 'OCCUPIED') return 'Occupied';
                    if (entity.state == 'STOPPABLE') return 'Your Wash';
                    return 'Unknown';
                  ]]]
                state:
                  - value: AVAILABLE
                    color: '#e4dff9'
                  - value: OCCUPIED
                    color: '#FF5449'
                  - value: STOPPABLE
                    color: '#ffb41b'
                  - operator: default
                    color: '#75796c'
                styles:
                  card:
                    - border: none
                    - box-shadow: none
                  name:
                    - font-size: 12px
                    - padding-bottom: 3px !important
                  state:
                    - font-size: 18px
                    - padding-bottom: 8px !important
              - type: custom:button-card
                entity: sensor.dryer_41296
                name: '41296'
                icon: mdi:tumble-dryer
                show_state: true
                aspect_ratio: 1/1
                size: 30%
                tap_action:
                  action: more-info
                state_display: |
                  [[[
                    if (entity.state == 'AVAILABLE') return 'Available';
                    if (entity.state == 'OCCUPIED') return 'Occupied';
                    if (entity.state == 'STOPPABLE') return 'Your Wash';
                    return 'Unknown';
                  ]]]
                state:
                  - value: AVAILABLE
                    color: '#e4dff9'
                  - value: OCCUPIED
                    color: '#FF5449'
                  - value: STOPPABLE
                    color: '#ffb41b'
                  - operator: default
                    color: '#75796c'
                styles:
                  card:
                    - border: none
                    - box-shadow: none
                  name:
                    - font-size: 12px
                    - padding-bottom: 3px !important
                  state:
                    - font-size: 18px
                    - padding-bottom: 8px !important
            title: Washing Machines & Dryers
            columns: 3
            view_layout:
              grid-area: climate
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:button-card
                entity: sensor.next_bus
                show_name: false
                show_icon: false
                show_state: false
                fields:
                  - topbar
                  - eta
                  - stops
                custom_fields:
                  topbar: |
                    [[[
                      const delay = entity.attributes.delay_minutes || 0;
                      let statusText, statusColor;

                      if (entity.state === 'unavailable') {
                        statusText = 'Unavailable';
                        statusColor = 'var(--disabled-text-color)';
                      } else if (delay > 0) {
                        statusText = `+${delay} min delay`;
                        statusColor = 'var(--error-color)';
                      } else {
                        statusText = 'On Time';
                        statusColor = 'var(--success-color)';
                      }

                      return `
                        <div style="display:flex; justify-content:space-between; align-items:center; padding: 12px 16px;">
                          <div style="background-color: var(--primary-color); color: var(--text-primary-color); border-radius: 12px; padding: 4px 10px; font-size: 14px; font-weight: 600;">
                            ${entity.attributes.line || '—'}
                          </div>
                          <div style="font-size: 14px; font-weight: 600; color: ${statusColor};">
                            ${statusText}
                          </div>
                        </div>
                      `;
                    ]]]
                  eta: |
                    [[[
                      const mins = entity.attributes.minutes_until_departure;
                      const isNow = mins <= 0;
                      let timeText, unitText = 'MIN';

                      if (entity.state === 'unavailable') {
                        timeText = '—';
                        unitText = '';
                      } else if (isNow) {
                        timeText = 'NOW';
                        unitText = '';
                      } else if (mins < 60) {
                        timeText = mins;
                      } else {
                        const h = Math.floor(mins / 60);
                        const m = mins % 60;
                        timeText = `${h}h ${m}m`;
                        unitText = '';
                      }

                      return `
                        <div style="display:flex; align-items:baseline; padding:0 16px; margin-top: 12px;">
                          <span style="font-size: 60px; font-weight: 700; line-height: 1; color: var(--primary-text-color); animation: ${isNow ? 'pulse 1.5s infinite' : 'none'};">
                            ${timeText}
                          </span>
                          <span style="font-size: 20px; font-weight: 400; color: var(--secondary-text-color); margin-left: 8px;">
                            ${unitText}
                          </span>
                        </div>
                        <style>
                          @keyframes pulse {
                            0% { opacity: 1; }
                            50% { opacity: 0.6; }
                            100% { opacity: 1; }
                          }
                        </style>
                      `;
                    ]]]
                  stops: |
                    [[[
                      return `
                        <div style="padding: 12px 16px; border-top: 1px solid var(--divider-color);">
                          <div style="display:flex; align-items:center; gap:12px; margin-bottom: 8px;">
                            <span style="width: 12px; height: 12px; border-radius: 50%; background: var(--primary-color); flex-shrink:0;"></span>
                            <span style="color: var(--primary-text-color); font-size: 15px; font-weight: 500; white-space:nowrap; overflow:hidden; text-overflow:ellipsis;">
                              ${entity.attributes.origin || '—'}
                            </span>
                          </div>
                          <div style="display:flex; align-items:center; gap:12px;">
                            <span style="width: 8px; height: 8px; border-radius: 50%; border: 2px solid var(--primary-color); flex-shrink:0;"></span>
                            <span style="color: var(--secondary-text-color); font-size: 15px; font-weight: 500; white-space:nowrap; overflow:hidden; text-overflow:ellipsis;">
                              ${entity.attributes.direction || '—'}
                            </span>
                          </div>
                        </div>
                      `;
                    ]]]
                styles:
                  card:
                    - background-color: var(--card-background-color)
                    - border-radius: 28px
                    - box-shadow: 0px 2px 4px rgba(0,0,0,0.1)
                    - padding: 0
                    - min-height: 190px
                    - position: relative
                    - overflow: hidden
                    - transition: transform 0.15s ease-in-out
                    - transform: scale(1)
                  custom_fields:
                    topbar:
                      - position: absolute
                      - top: 0
                      - left: 0
                      - right: 0
                    eta:
                      - position: absolute
                      - top: 50%
                      - left: 0
                      - right: 0
                      - transform: translateY(-65%)
                    stops:
                      - position: absolute
                      - bottom: 0
                      - left: 0
                      - right: 0
                card_mod:
                  style: |
                    ha-card:active {
                      transform: scale(0.97);
                    }
              - type: custom:button-card
                entity: sensor.time_in_bed
                show_name: false
                show_icon: false
                show_state: false
                fields:
                  - topbar
                  - timer
                custom_fields:
                  topbar: |
                    [[[
                      return `
                        <div style="
                          position: absolute;
                          bottom: 65px;
                          left: 19px;
                          font-size: 16px;
                          font-weight: 700;
                          color: #fff;
                          opacity: 0.9;
                        ">
                          Time In Bed
                        </div>
                      `;
                    ]]]
                  timer: |
                    [[[
                      // Convert decimal hours to HH:mm
                      let hoursFloat = parseFloat(entity.state);
                      if (isNaN(hoursFloat)) return `
                        <div style="color:#fff; opacity: 0.6; font-size:16px; font-weight:600;">
                          0 hr 0 min
                        </div>`;

                      let hrs = Math.floor(hoursFloat);
                      let mins = Math.round((hoursFloat - hrs) * 60);

                      return `
                        <div style="
                          position: absolute;
                          bottom: 16px;
                          left: 16px;
                          display: flex;
                          align-items: baseline;
                          gap: 8px;
                        ">
                          <span style="
                            font-size: 44px;
                            font-weight: 700;
                            line-height: 1;
                            letter-spacing: -2px;
                            color: #fff;">
                            ${hrs}
                          </span>
                          <span style="
                            font-size: 18px;
                            font-weight: 400;
                            color: #fff;
                            opacity: 0.8;">
                            hr
                          </span>
                          <span style="
                            font-size: 44px;
                            font-weight: 700;
                            line-height: 1;
                            letter-spacing: -2px;
                            color: #fff;">
                            ${mins}
                          </span>
                          <span style="
                            font-size: 18px;
                            font-weight: 400;
                            color: #fff;
                            opacity: 0.8;">
                            min
                          </span>
                        </div>
                      `;
                    ]]]
                styles:
                  card:
                    - height: 190px
                grid_options:
                  columns: 6
                  rows: auto
                card_mod:
                  style: |
                    ha-card {
                      border-radius: 28px !important;
                      border: 1px solid rgba(255,255,255,0.05) !important;
                    }
                    ha-card:active {
                      transform: scale(0.97);
                    }
            title: Transportation
            columns: 2
            view_layout:
              grid-area: climate
      - type: grid
        cards:
          - type: custom:navbar-card
            iphone: null
            show_labels: true
            desktop: null
            position: left
            min_width: 768
            layout: null
            auto_padding: true
            routes:
              - url: /dashboard-iphone/Home
                icon: mdi:home
                icon_selected: mdi:home-variant
                label: Home
              - url: /dashboard-iphone/System
                icon: mdi:powershell
                label: System
              - url: /dashboard-iphone/Proxmox
                icon: phu:proxmox
                label: Proxmox
              - url: /dashboard-iphone/timeflows
                icon: mdi:timer
                label: Timeflows
            mobile:
              mode: floating
            styles: |
              .navbar.mobile .icon { --mdc-icon-size: 28px; !}
              .navbar.desktop .icon { --mdc-icon-size: 30px; }
              .navbar {
                background: #212824;
              }
    theme: Material You
    cards: []
    header:
      card:
        type: custom:button-card
        entity: person.rishi
        show_name: false
        show_state: false
        show_entity_picture: false
        show_icon: false
        triggers_update: sensor.time
        custom_fields:
          left: |
            [[[
              const time = new Date().toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit' });
              const date = new Date().toLocaleDateString('en-US', { weekday: 'long', month: 'long', day: 'numeric' });
              
              return `
                <div style="text-align: left; max-width: 200px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                  <span style="font-size: 46px; font-weight: 680; line-height: 1;">
                    ${time}
                  </span>
                  <br>
                  <span style="font-size: 15px; font-weight: 400;">
                    ${date}
                  </span>
                </div>
              `;
            ]]]
          avatar: |
            [[[
              const pic = (entity && entity.attributes && entity.attributes.entity_picture) ? entity.attributes.entity_picture : '';
              return `<img src="${pic}" alt="" style="width:55px; height:55px; border-radius:50%; background:#444; display:block;" />`;
            ]]]
        styles:
          card:
            - background: transparent
            - border: none
            - box-shadow: none
            - padding: 12px
          grid:
            - display: flex
            - flex-direction: row
            - align-items: flex-start
            - justify-content: space-between
            - gap: 12px
          custom_fields:
            left:
              - order: 1
              - min-width: 0
            avatar:
              - order: 2
              - flex: 0 0 auto
  - type: sections
    max_columns: 1
    title: timeflows
    path: timeflows
    sections:
      - type: grid
        cards:
          - type: heading
            heading: Track the time
            heading_style: title
            icon: mdi:clock-time-eight
          - square: false
            type: grid
            cards:
              - type: custom:timeflow-card
                title: Year
                subtitle: |-
                  {{ (((now().timetuple().tm_yday - 1) * 24 + now().hour) /
                      ((now().replace(month=12, day=31) - now().replace(month=1, day=1)).days * 24)
                     * 100) | round(1) }}%
                target_date: >-
                  {{ now().replace(month=12, day=31, hour=23, minute=59,
                  second=59).strftime('%Y-%m-%dT%H:%M:%S') }}
                creation_date: >-
                  {{ now().replace(month=1, day=1, hour=0, minute=0,
                  second=0).strftime('%Y-%m-%dT%H:%M:%S') }}
                show_days: true
                show_hours: false
                show_minutes: false
                show_seconds: false
                color: '#34332D'
                background_color: '#B6B69E'
                progress_color: '#FEBC4C'
                stroke_width: 6
                card_mod:
                  style:
                    .: |
                      ha-card .title {
                        font-size: 1.2rem !important;
                      }
                      ha-card .subtitle {
                        font-size: 2rem !important;
                      }
                      ha-card .card-content {
                        display: flex !important;
                        flex-direction: row !important;
                        align-items: center !important;
                        justify-content: space-between !important;
                      }
                      ha-card .header {
                        margin-bottom: 0 !important;
                      }
                      ha-card .content {
                        margin-top: 0 !important;
                      }
                      ha-card {
                        border-radius: 28px !important;
                        box-shadow: none !important;
                        border: none !important;
                       }
              - type: custom:timeflow-card
                title: Month
                subtitle: |-
                  {{ (((now().day - 1) * 24 + now().hour) /
                      ((now().replace(month=now().month % 12 + 1, day=1) - now().replace(day=1)).days * 24)
                     * 100) | round() }}%
                target_date: >-
                  {% set next_month = (now().replace(day=28) +
                  timedelta(days=4)).replace(day=1) %} {{ (next_month -
                  timedelta(seconds=1)).strftime('%Y-%m-%dT%H:%M:%S') }}
                creation_date: >-
                  {{ now().replace(day=1, hour=0, minute=0,
                  second=0).strftime('%Y-%m-%dT%H:%M:%S') }}
                show_days: true
                show_hours: false
                show_minutes: false
                show_seconds: false
                color: '#FEBC4C'
                background_color: '#5B5B43'
                progress_color: '#E15603'
                stroke_width: 6
                card_mod:
                  style:
                    .: |
                      ha-card .title {
                        font-size: 1.2rem !important;
                      }
                      ha-card .subtitle {
                        font-size: 2rem !important;
                      }
                      ha-card .card-content {
                        display: flex !important;
                        flex-direction: row !important;
                        align-items: center !important;
                        justify-content: space-between !important;
                      }
                      ha-card .header {
                        margin-bottom: 0 !important;
                      }
                      ha-card .content {
                        margin-top: 0 !important;
                      }
                      ha-card {
                        border-radius: 28px !important;
                        box-shadow: none !important;
                        border: none !important;
                       }
              - type: custom:timeflow-card
                title: Week
                subtitle: >-
                  {{ ((now().weekday() * 24 + now().hour) / (7 * 24) * 100) |
                  round }}%
                target_date: >-
                  {{ (now() + timedelta(days=(6 -
                  now().weekday()))).replace(hour=23, minute=59,
                  second=59).strftime('%Y-%m-%dT%H:%M:%S') }}
                creation_date: >-
                  {{ (now() - timedelta(days=now().weekday())).replace(hour=0,
                  minute=0, second=0).strftime('%Y-%m-%dT%H:%M:%S') }}
                show_days: true
                show_hours: false
                show_minutes: false
                show_seconds: false
                color: '#000001'
                background_color: '#596E67'
                progress_color: '#9CABA8'
                stroke_width: 6
                card_mod:
                  style:
                    .: |
                      ha-card .title {
                        font-size: 1.2rem !important;
                      }
                      ha-card .subtitle {
                        font-size: 2rem !important;
                      }
                      ha-card .card-content {
                        display: flex !important;
                        flex-direction: row !important;
                        align-items: center !important;
                        justify-content: space-between !important;
                      }
                      ha-card .header {
                        margin-bottom: 0 !important;
                      }
                      ha-card .content {
                        margin-top: 0 !important;
                      }
                      ha-card {
                        border-radius: 28px !important;
                        box-shadow: none !important;
                        border: none !important;
                       }
              - type: custom:timeflow-card
                title: Today
                subtitle: ' {{ (now().hour / 24 * 100) | round() }}%'
                target_date: >-
                  {{ (now().replace(hour=23, minute=59,
                  second=59)).strftime('%Y-%m-%dT%H:%M:%S') }}
                creation_date: >-
                  {{ now().replace(hour=0, minute=0,
                  second=0).strftime('%Y-%m-%dT%H:%M:%S') }}
                show_days: false
                show_hours: true
                show_minutes: true
                show_seconds: true
                color: '#30341D'
                background_color: '#E6E8D7'
                progress_color: '#FB8200'
                stroke_width: 6
                card_mod:
                  style:
                    .: |
                      ha-card .title {
                        font-size: 1.2rem !important;
                      }
                      ha-card .subtitle {
                        font-size: 2rem !important;
                      }
                      ha-card .card-content {
                        display: flex !important;
                        flex-direction: row !important;
                        align-items: center !important;
                        justify-content: space-between !important;
                      }
                      ha-card .header {
                        margin-bottom: 0 !important;
                      }
                      ha-card .content {
                        margin-top: 0 !important;
                      }
                      ha-card {
                        border-radius: 28px !important;
                        box-shadow: none !important;
                        border: none !important;
                      }
                    progress-circle$: |
                      .progress-bg {
                        stroke: #C4CCA4 !important; /* Dark gray background track */
                      }
            columns: 2
            view_layout:
              grid-area: lights
        column_span: 1
      - type: grid
        cards:
          - type: heading
            heading: Birthdays
            heading_style: title
            icon: mdi:cake-variant-outline
          - square: false
            type: grid
            cards:
              - type: custom:timeflow-card-beta
                title: >-
                  {% set person_name = "Rishi" %} {% set birth_year = 1999 %} {%
                  set birthday_month = 8 %} {% set birthday_day = 31 %} {% set
                  current_date = now() %} {% set this_year_birthday =
                  current_date.replace(month=birthday_month, day=birthday_day,
                  hour=0, minute=0, second=0, microsecond=0) %} {% if
                  current_date > this_year_birthday %}
                    {% set next_birthday = this_year_birthday.replace(year=this_year_birthday.year + 1) %}
                  {% else %}
                    {% set next_birthday = this_year_birthday %}
                  {% endif %} {% set age = next_birthday.year - birth_year %} {{
                  person_name }}'s {{ age }}{{ 
                    'st' if age % 10 == 1 and age % 100 != 11 else
                    'nd' if age % 10 == 2 and age % 100 != 12 else
                    'rd' if age % 10 == 3 and age % 100 != 13 else
                    'th'
                  }} Birthday
                target_date: >-
                  {% set birthday_month = 8 %} {% set birthday_day = 31 %} {%
                  set current_date = now() %} {% set this_year_birthday =
                  current_date.replace(month=birthday_month, day=birthday_day,
                  hour=0, minute=0, second=0, microsecond=0) %} {% if
                  current_date > this_year_birthday %}
                    {% set next_birthday = this_year_birthday.replace(year=this_year_birthday.year + 1) %}
                  {% else %}
                    {% set next_birthday = this_year_birthday %}
                  {% endif %} {{ next_birthday.isoformat() }}
                creation_date: >-
                  {% set current_date = now() %} {% set start_of_year =
                  current_date.replace(month=1, day=1, hour=0, minute=0,
                  second=0, microsecond=0) %} {{ start_of_year.isoformat() }}
                show_days: true
                show_hours: true
                show_minutes: true
                show_seconds: false
                color: >-
                  {% set birthday_month = 8 %} {% set birthday_day = 31 %} {%
                  set current_date = now() %} {% set this_year_birthday =
                  current_date.replace(month=birthday_month, day=birthday_day,
                  hour=0, minute=0, second=0, microsecond=0) %} {% if
                  current_date > this_year_birthday %}
                    {% set next_birthday = this_year_birthday.replace(year=this_year_birthday.year + 1) %}
                  {% else %}
                    {% set next_birthday = this_year_birthday %}
                  {% endif %} {% set days_until = (next_birthday -
                  current_date).days %} {% if days_until == 0 %}
                    #FF6B6B
                  {% elif days_until <= 7 %}
                    #4ECDC4
                  {% elif days_until <= 30 %}
                    #45B7D1
                  {% else %}
                    #96CEB4
                  {% endif %}
                background_color: '#2C3150'
                progress_color: '#D0CFCF'
                height: 245
                stroke_width: 6
                card_mod:
                  style: |
                    ha-card .title {
                      font-size: 2.2rem;
                    }
                    ha-card .subtitle {
                      font-size: 2.0rem;
                    }
                    ha-card {
                      border-radius: 28px !important;
                      box-shadow: none !important;
                      border: none !important;
                     }
                grid_options:
                  columns: 12
            columns: 1
            view_layout:
              grid-area: lights
      - type: grid
        cards:
          - type: heading
            heading: Chores
            heading_style: title
            icon: mdi:trash-can-outline
          - type: grid
            square: false
            columns: 2
            cards:
              - type: custom:timeflow-card
                title: Empty trash
                target_date: '2025-08-22T18:00:00'
                creation_date: '2025-08-17T18:00:00'
                background_color: '#5b4130'
                color: '#ffdbc7'
                progress_color: '#e5bfa9'
                show_months: false
                show_days: true
                show_hours: true
                show_minutes: true
                expired_text: Trash emptied
                stroke_width: 6
                card_mod:
                  style:
                    .: |
                      ha-card .title {
                        font-size: 1.2rem !important;
                      }
                      ha-card .subtitle {
                        font-size: 1.2rem !important;
                      }
                      ha-card .card-content {
                        display: flex !important;
                        flex-direction: row !important;
                        align-items: center !important;
                        justify-content: space-between !important;
                      }
                      ha-card .header {
                        margin-bottom: 0 !important;
                      }
                      ha-card .content {
                        margin-top: 0 !important;
                      }
                      ha-card {
                        border-radius: 28px !important;
                        box-shadow: none !important;
                        border: none !important;
                      }
              - type: custom:timeflow-card
                title: Laundry Timer
                target_date: '2025-08-19T13:14:00'
                creation_date: '2025-08-19T12:34:00'
                background_color: '#004f54'
                color: '#9df0f8'
                show_minutes: true
                progress_color: '#9df0f8'
                expired_text: Washing Completed
                stroke_width: 6
                card_mod:
                  style:
                    .: |
                      ha-card .title {
                        font-size: 1.2rem !important;
                      }
                      ha-card .subtitle {
                        font-size: 1.2rem !important;
                      }
                      ha-card .card-content {
                        display: flex !important;
                        flex-direction: row !important;
                        align-items: center !important;
                        justify-content: space-between !important;
                      }
                      ha-card .header {
                        margin-bottom: 0 !important;
                      }
                      ha-card .content {
                        margin-top: 0 !important;
                      }
                      ha-card {
                        border-radius: 28px !important;
                        box-shadow: none !important;
                        border: none !important;
                      }
              - type: custom:timeflow-card
                title: Dishwasher Timer
                target_date: '2025-08-19T12:15:00'
                creation_date: '2025-08-19T11:00:00'
                background_color: '#374764'
                color: '#f4fafd'
                show_minutes: true
                progress_color: '#f4fafd'
                expired_text: Completed
                stroke_width: 6
                card_mod:
                  style:
                    .: |
                      ha-card .title {
                        font-size: 1.2rem !important;
                      }
                      ha-card .subtitle {
                        font-size: 1.2rem !important;
                      }
                      ha-card .card-content {
                        display: flex !important;
                        flex-direction: row !important;
                        align-items: center !important;
                        justify-content: space-between !important;
                      }
                      ha-card .header {
                        margin-bottom: 0 !important;
                      }
                      ha-card .content {
                        margin-top: 0 !important;
                      }
                      ha-card {
                        border-radius: 28px !important;
                        box-shadow: none !important;
                        border: none !important;
                      }
              - type: custom:timeflow-card
                title: Grocery Shopping
                target_date: '2025-08-23T13:14:00'
                creation_date: '2025-08-17T12:34:00'
                background_color: '#48491e'
                color: '#e6e6ad'
                show_days: true
                progress_color: '#e6e6ad'
                expired_text: Time to shop!
                stroke_width: 6
                card_mod:
                  style:
                    .: |
                      ha-card .title {
                        font-size: 1.2rem !important;
                      }
                      ha-card .subtitle {
                        font-size: 1.2rem !important;
                      }
                      ha-card .card-content {
                        display: flex !important;
                        flex-direction: row !important;
                        align-items: center !important;
                        justify-content: space-between !important;
                      }
                      ha-card .header {
                        margin-bottom: 0 !important;
                      }
                      ha-card .content {
                        margin-top: 0 !important;
                      }
                      ha-card {
                        border-radius: 28px !important;
                        box-shadow: none !important;
                        border: none !important;
                      }
          - type: custom:navbar-card
            iphone: null
            show_labels: true
            desktop: null
            position: left
            min_width: 768
            layout: null
            auto_padding: true
            routes:
              - url: /dashboard-iphone/Home
                icon: mdi:home
                icon_selected: mdi:home-variant
                label: Home
              - url: /dashboard-iphone/System
                icon: mdi:powershell
                label: System
              - url: /dashboard-iphone/Proxmox
                icon: phu:proxmox
                label: Proxmox
              - url: /dashboard-iphone/timeflows
                icon: mdi:timer
                label: Timeflows
            mobile:
              mode: floating
            styles: |
              .navbar.mobile .icon { --mdc-icon-size: 28px; !}
              .navbar.desktop .icon { --mdc-icon-size: 30px; }
              .navbar {
                background: #212824;
              }
    header:
      card:
        type: custom:button-card
        entity: person.rishi
        show_name: false
        show_state: false
        show_entity_picture: false
        show_icon: false
        triggers_update: sensor.time
        custom_fields:
          left: |
            [[[
              const time = new Date().toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit' });
              const date = new Date().toLocaleDateString('en-US', { weekday: 'long', month: 'long', day: 'numeric' });
              
              return `
                <div style="text-align: left; max-width: 200px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                  <span style="font-size: 46px; font-weight: 680; line-height: 1;">
                    ${time}
                  </span>
                  <br>
                  <span style="font-size: 15px; font-weight: 400;">
                    ${date}
                  </span>
                </div>
              `;
            ]]]
          avatar: |
            [[[
              const pic = (entity && entity.attributes && entity.attributes.entity_picture) ? entity.attributes.entity_picture : '';
              return `<img src="${pic}" alt="" style="width:55px; height:55px; border-radius:50%; background:#444; display:block;" />`;
            ]]]
        styles:
          card:
            - background: transparent
            - border: none
            - box-shadow: none
            - padding: 12px
          grid:
            - display: flex
            - flex-direction: row
            - align-items: flex-start
            - justify-content: space-between
            - gap: 12px
          custom_fields:
            left:
              - order: 1
              - min-width: 0
            avatar:
              - order: 2
              - flex: 0 0 auto
    cards: []
    theme: Material You
